# usage:
#   bookmark current directory
#   $ b [name]
#
#   go to a bookmarked directory by name
#   $ go [name]
#
#   rename a bookmark
#   $ bmv oldname newname
#
#   remove a bookmark
#   $ brm name
#
#   display all bookmarked dirs.
#   $ bl

BOOKMARK_DIR=~/.bash_bookmarks
mkdir -p $BOOKMARK_DIR

# Bookmark current directory (optional name as arg)
b(){
  key=${1:-"#DEFAULT"}
  file=$BOOKMARK_DIR/$key
  value=${PWD/$HOME/"~"}
  if [ -r $file ]; then
    read -p "Bookmark already exists (`cat $file`).  Rewrite? " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
      echo $value > $file
      echo "Bookmarked $key: $value"
    fi
  else
    echo $value > $file
    echo Bookmarked $key = $value
  fi
}

# Go to a bookmark
go(){
  key=${1:-"#DEFAULT"}
  file=$BOOKMARK_DIR/$key
  if [ -r $file ]; then
    dest=$(cat $file)
    cd ${dest/"~"/$HOME};
  else
    echo "No bookmark called $key"
  fi
}

# Rename a bookmark
bmv(){
  key=${1:-"#DEFAULT"}
  file=$BOOKMARK_DIR/$key
  if [ -r $file ]; then
    if [ $# -gt 1 ]; then
      dest=$BOOKMARK_DIR/$2
      if [ -r $dest ]; then
        read -p "Bookmark '$2' already exists (`cat $dest`).  Rewrite? " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
          \mv $file $dest
          echo "Renamed $key to $2"
        fi
      else
        mv $file $dest
        echo "Renamed $key to $2"
      fi
    else
      echo "Missing new bookmark name"
    fi
  else
    echo "No bookmark called $key"
  fi
}
alias brn=bmv

# Remove a bookmark
brm(){
  key=${1:-"#DEFAULT"}
  file=$BOOKMARK_DIR/$key
  if [ -r $file ]; then
    rm $file
    echo "Removed bookmark $key"
  else
    echo "No bookmark called $key"
  fi
}

if [ $SHELL = "/bin/bash" ]; then
  complete -o default -W '`ls $BOOKMARK_DIR`' go bmv brn brm
fi

# List bookmarks
bl(){
 bookmarks=""
  for file in $BOOKMARK_DIR/*; do
    bName=$(basename $file);
    bDest=$(cat $file);
    bookmarks="$bookmarks$bName:\t$bDest\n"
  done
  echo -ne $bookmarks | column -t
}

alias bls=bl
